{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Pandas walk-through: Federal Election Commission dataset\n",
    "\n",
    "This walk-through is adapted from Chapter 14.5 of Wes McKinney's book, [Python for Data Analysis](http://shop.oreilly.com/product/0636920023784.do) (3rd edition)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.23.4\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "print(pd.__version__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Setup\n",
    "\n",
    "The following code cell imports a local Python module (stored in `cse6040utils.py`) and uses one of its utility functions to open the sample dataset.\n",
    "\n",
    "> Note: Due to the size of the data file, we are not making it available for download. You will need to run this notebook on Vocareum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'./resource/asnlib/publicdata/P00000001-ALL.csv' is ready!\n"
     ]
    }
   ],
   "source": [
    "from cse6040utils import download_dataset\n",
    "local_data = download_dataset({'P00000001-ALL.csv': '31df639d0b5dbd3b6d755f91d6bf6fb4'}, vocareum_only=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Initial exploration and clean-up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.6/site-packages/IPython/core/interactiveshell.py:2785: DtypeWarning: Columns (6) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cmte_id</th>\n",
       "      <th>cand_id</th>\n",
       "      <th>cand_nm</th>\n",
       "      <th>contbr_nm</th>\n",
       "      <th>contbr_city</th>\n",
       "      <th>contbr_st</th>\n",
       "      <th>contbr_zip</th>\n",
       "      <th>contbr_employer</th>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th>contb_receipt_amt</th>\n",
       "      <th>contb_receipt_dt</th>\n",
       "      <th>receipt_desc</th>\n",
       "      <th>memo_cd</th>\n",
       "      <th>memo_text</th>\n",
       "      <th>form_tp</th>\n",
       "      <th>file_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>HARVEY, WILLIAM</td>\n",
       "      <td>MOBILE</td>\n",
       "      <td>AL</td>\n",
       "      <td>3.6601e+08</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>250.0</td>\n",
       "      <td>20-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>736166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>HARVEY, WILLIAM</td>\n",
       "      <td>MOBILE</td>\n",
       "      <td>AL</td>\n",
       "      <td>3.6601e+08</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>50.0</td>\n",
       "      <td>23-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>736166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>SMITH, LANIER</td>\n",
       "      <td>LANETT</td>\n",
       "      <td>AL</td>\n",
       "      <td>3.68633e+08</td>\n",
       "      <td>INFORMATION REQUESTED</td>\n",
       "      <td>INFORMATION REQUESTED</td>\n",
       "      <td>250.0</td>\n",
       "      <td>05-JUL-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>749073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>BLEVINS, DARONDA</td>\n",
       "      <td>PIGGOTT</td>\n",
       "      <td>AR</td>\n",
       "      <td>7.24548e+08</td>\n",
       "      <td>NONE</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>250.0</td>\n",
       "      <td>01-AUG-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>749073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>WARDENBURG, HAROLD</td>\n",
       "      <td>HOT SPRINGS NATION</td>\n",
       "      <td>AR</td>\n",
       "      <td>7.19016e+08</td>\n",
       "      <td>NONE</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>300.0</td>\n",
       "      <td>20-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>736166</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     cmte_id    cand_id             cand_nm           contbr_nm  \\\n",
       "0  C00410118  P20002978  Bachmann, Michelle     HARVEY, WILLIAM   \n",
       "1  C00410118  P20002978  Bachmann, Michelle     HARVEY, WILLIAM   \n",
       "2  C00410118  P20002978  Bachmann, Michelle       SMITH, LANIER   \n",
       "3  C00410118  P20002978  Bachmann, Michelle    BLEVINS, DARONDA   \n",
       "4  C00410118  P20002978  Bachmann, Michelle  WARDENBURG, HAROLD   \n",
       "\n",
       "          contbr_city contbr_st   contbr_zip        contbr_employer  \\\n",
       "0              MOBILE        AL   3.6601e+08                RETIRED   \n",
       "1              MOBILE        AL   3.6601e+08                RETIRED   \n",
       "2              LANETT        AL  3.68633e+08  INFORMATION REQUESTED   \n",
       "3             PIGGOTT        AR  7.24548e+08                   NONE   \n",
       "4  HOT SPRINGS NATION        AR  7.19016e+08                   NONE   \n",
       "\n",
       "       contbr_occupation  contb_receipt_amt contb_receipt_dt receipt_desc  \\\n",
       "0                RETIRED              250.0        20-JUN-11          NaN   \n",
       "1                RETIRED               50.0        23-JUN-11          NaN   \n",
       "2  INFORMATION REQUESTED              250.0        05-JUL-11          NaN   \n",
       "3                RETIRED              250.0        01-AUG-11          NaN   \n",
       "4                RETIRED              300.0        20-JUN-11          NaN   \n",
       "\n",
       "  memo_cd memo_text form_tp  file_num  \n",
       "0     NaN       NaN   SA17A    736166  \n",
       "1     NaN       NaN   SA17A    736166  \n",
       "2     NaN       NaN   SA17A    749073  \n",
       "3     NaN       NaN   SA17A    749073  \n",
       "4     NaN       NaN   SA17A    736166  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load CSV file\n",
    "fecdata = pd.read_csv(local_data['P00000001-ALL.csv'])\n",
    "fecdata.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cmte_id</th>\n",
       "      <th>cand_id</th>\n",
       "      <th>cand_nm</th>\n",
       "      <th>contbr_nm</th>\n",
       "      <th>contbr_city</th>\n",
       "      <th>contbr_st</th>\n",
       "      <th>contbr_zip</th>\n",
       "      <th>contbr_employer</th>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th>contb_receipt_amt</th>\n",
       "      <th>contb_receipt_dt</th>\n",
       "      <th>receipt_desc</th>\n",
       "      <th>memo_cd</th>\n",
       "      <th>memo_text</th>\n",
       "      <th>form_tp</th>\n",
       "      <th>file_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>HARVEY, WILLIAM</td>\n",
       "      <td>MOBILE</td>\n",
       "      <td>AL</td>\n",
       "      <td>3.6601e+08</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>250.0</td>\n",
       "      <td>20-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>736166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>HARVEY, WILLIAM</td>\n",
       "      <td>MOBILE</td>\n",
       "      <td>AL</td>\n",
       "      <td>3.6601e+08</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>50.0</td>\n",
       "      <td>23-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>736166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>SMITH, LANIER</td>\n",
       "      <td>LANETT</td>\n",
       "      <td>AL</td>\n",
       "      <td>3.68633e+08</td>\n",
       "      <td>INFORMATION REQUESTED</td>\n",
       "      <td>INFORMATION REQUESTED</td>\n",
       "      <td>250.0</td>\n",
       "      <td>05-JUL-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>749073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>BLEVINS, DARONDA</td>\n",
       "      <td>PIGGOTT</td>\n",
       "      <td>AR</td>\n",
       "      <td>7.24548e+08</td>\n",
       "      <td>NONE</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>250.0</td>\n",
       "      <td>01-AUG-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>749073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>C00410118</td>\n",
       "      <td>P20002978</td>\n",
       "      <td>Bachmann, Michelle</td>\n",
       "      <td>WARDENBURG, HAROLD</td>\n",
       "      <td>HOT SPRINGS NATION</td>\n",
       "      <td>AR</td>\n",
       "      <td>7.19016e+08</td>\n",
       "      <td>NONE</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>300.0</td>\n",
       "      <td>20-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>736166</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     cmte_id    cand_id             cand_nm           contbr_nm  \\\n",
       "0  C00410118  P20002978  Bachmann, Michelle     HARVEY, WILLIAM   \n",
       "1  C00410118  P20002978  Bachmann, Michelle     HARVEY, WILLIAM   \n",
       "2  C00410118  P20002978  Bachmann, Michelle       SMITH, LANIER   \n",
       "3  C00410118  P20002978  Bachmann, Michelle    BLEVINS, DARONDA   \n",
       "4  C00410118  P20002978  Bachmann, Michelle  WARDENBURG, HAROLD   \n",
       "\n",
       "          contbr_city contbr_st   contbr_zip        contbr_employer  \\\n",
       "0              MOBILE        AL   3.6601e+08                RETIRED   \n",
       "1              MOBILE        AL   3.6601e+08                RETIRED   \n",
       "2              LANETT        AL  3.68633e+08  INFORMATION REQUESTED   \n",
       "3             PIGGOTT        AR  7.24548e+08                   NONE   \n",
       "4  HOT SPRINGS NATION        AR  7.19016e+08                   NONE   \n",
       "\n",
       "       contbr_occupation  contb_receipt_amt contb_receipt_dt receipt_desc  \\\n",
       "0                RETIRED              250.0        20-JUN-11          NaN   \n",
       "1                RETIRED               50.0        23-JUN-11          NaN   \n",
       "2  INFORMATION REQUESTED              250.0        05-JUL-11          NaN   \n",
       "3                RETIRED              250.0        01-AUG-11          NaN   \n",
       "4                RETIRED              300.0        20-JUN-11          NaN   \n",
       "\n",
       "  memo_cd memo_text form_tp  file_num  \n",
       "0     NaN       NaN   SA17A    736166  \n",
       "1     NaN       NaN   SA17A    736166  \n",
       "2     NaN       NaN   SA17A    749073  \n",
       "3     NaN       NaN   SA17A    749073  \n",
       "4     NaN       NaN   SA17A    736166  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecdata.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1001731 entries, 0 to 1001730\n",
      "Data columns (total 16 columns):\n",
      "cmte_id              1001731 non-null object\n",
      "cand_id              1001731 non-null object\n",
      "cand_nm              1001731 non-null object\n",
      "contbr_nm            1001731 non-null object\n",
      "contbr_city          1001712 non-null object\n",
      "contbr_st            1001727 non-null object\n",
      "contbr_zip           1001620 non-null object\n",
      "contbr_employer      988002 non-null object\n",
      "contbr_occupation    993301 non-null object\n",
      "contb_receipt_amt    1001731 non-null float64\n",
      "contb_receipt_dt     1001731 non-null object\n",
      "receipt_desc         14166 non-null object\n",
      "memo_cd              92482 non-null object\n",
      "memo_text            97770 non-null object\n",
      "form_tp              1001731 non-null object\n",
      "file_num             1001731 non-null int64\n",
      "dtypes: float64(1), int64(1), object(14)\n",
      "memory usage: 122.3+ MB\n"
     ]
    }
   ],
   "source": [
    "fecdata.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Get a random sample:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cmte_id</th>\n",
       "      <th>cand_id</th>\n",
       "      <th>cand_nm</th>\n",
       "      <th>contbr_nm</th>\n",
       "      <th>contbr_city</th>\n",
       "      <th>contbr_st</th>\n",
       "      <th>contbr_zip</th>\n",
       "      <th>contbr_employer</th>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th>contb_receipt_amt</th>\n",
       "      <th>contb_receipt_dt</th>\n",
       "      <th>receipt_desc</th>\n",
       "      <th>memo_cd</th>\n",
       "      <th>memo_text</th>\n",
       "      <th>form_tp</th>\n",
       "      <th>file_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>496548</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>LENTZ, ERIC</td>\n",
       "      <td>RENO</td>\n",
       "      <td>NV</td>\n",
       "      <td>89502</td>\n",
       "      <td>CARDMI CENTRIX</td>\n",
       "      <td>ENGINEER</td>\n",
       "      <td>212.0</td>\n",
       "      <td>27-SEP-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>756218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>545276</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>TROWBRIDGE, JAMIE</td>\n",
       "      <td>NEW YORK</td>\n",
       "      <td>NY</td>\n",
       "      <td>100034632</td>\n",
       "      <td>TIERRA INNOVATION, INC.</td>\n",
       "      <td>CEO</td>\n",
       "      <td>50.0</td>\n",
       "      <td>31-MAR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>780234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>919979</th>\n",
       "      <td>C00496067</td>\n",
       "      <td>P00003608</td>\n",
       "      <td>Cain, Herman</td>\n",
       "      <td>CRAWFORD, JOSEPH V. MR.</td>\n",
       "      <td>LEANDER</td>\n",
       "      <td>TX</td>\n",
       "      <td>786411677</td>\n",
       "      <td>SELF EMPLOYED</td>\n",
       "      <td>ATTORNEY</td>\n",
       "      <td>25.0</td>\n",
       "      <td>18-NOV-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>776884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140731</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>SCOTT, SHARON E.</td>\n",
       "      <td>PARADISE</td>\n",
       "      <td>CA</td>\n",
       "      <td>959693707</td>\n",
       "      <td>NOT EMPLOYED</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>100.0</td>\n",
       "      <td>31-MAR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>780234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>905313</th>\n",
       "      <td>C00496067</td>\n",
       "      <td>P00003608</td>\n",
       "      <td>Cain, Herman</td>\n",
       "      <td>WALKER, BRANDON</td>\n",
       "      <td>CLOVIS</td>\n",
       "      <td>CA</td>\n",
       "      <td>9.36198e+08</td>\n",
       "      <td>INFORMATION REQUESTED</td>\n",
       "      <td>INFORMATION REQUESTED</td>\n",
       "      <td>250.0</td>\n",
       "      <td>17-OCT-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>776884</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          cmte_id    cand_id        cand_nm                contbr_nm  \\\n",
       "496548  C00431445  P80003338  Obama, Barack              LENTZ, ERIC   \n",
       "545276  C00431445  P80003338  Obama, Barack        TROWBRIDGE, JAMIE   \n",
       "919979  C00496067  P00003608   Cain, Herman  CRAWFORD, JOSEPH V. MR.   \n",
       "140731  C00431445  P80003338  Obama, Barack         SCOTT, SHARON E.   \n",
       "905313  C00496067  P00003608   Cain, Herman          WALKER, BRANDON   \n",
       "\n",
       "       contbr_city contbr_st   contbr_zip          contbr_employer  \\\n",
       "496548        RENO        NV        89502           CARDMI CENTRIX   \n",
       "545276    NEW YORK        NY    100034632  TIERRA INNOVATION, INC.   \n",
       "919979     LEANDER        TX    786411677            SELF EMPLOYED   \n",
       "140731    PARADISE        CA    959693707             NOT EMPLOYED   \n",
       "905313      CLOVIS        CA  9.36198e+08    INFORMATION REQUESTED   \n",
       "\n",
       "            contbr_occupation  contb_receipt_amt contb_receipt_dt  \\\n",
       "496548               ENGINEER              212.0        27-SEP-11   \n",
       "545276                    CEO               50.0        31-MAR-12   \n",
       "919979               ATTORNEY               25.0        18-NOV-11   \n",
       "140731                RETIRED              100.0        31-MAR-12   \n",
       "905313  INFORMATION REQUESTED              250.0        17-OCT-11   \n",
       "\n",
       "       receipt_desc memo_cd memo_text form_tp  file_num  \n",
       "496548          NaN     NaN       NaN   SA17A    756218  \n",
       "545276          NaN     NaN       NaN   SA17A    780234  \n",
       "919979          NaN     NaN       NaN   SA17A    776884  \n",
       "140731          NaN     NaN       NaN   SA17A    780234  \n",
       "905313          NaN     NaN       NaN   SA17A    776884  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecdata.sample(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Summarize numerical data (`.describe()`):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>contb_receipt_amt</th>\n",
       "      <th>file_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.001731e+06</td>\n",
       "      <td>1.001731e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.982352e+02</td>\n",
       "      <td>7.744948e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.749667e+03</td>\n",
       "      <td>1.059822e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-3.080000e+04</td>\n",
       "      <td>7.235110e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3.500000e+01</td>\n",
       "      <td>7.719270e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000e+02</td>\n",
       "      <td>7.792250e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.500000e+02</td>\n",
       "      <td>7.802340e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.014491e+06</td>\n",
       "      <td>7.878030e+05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       contb_receipt_amt      file_num\n",
       "count       1.001731e+06  1.001731e+06\n",
       "mean        2.982352e+02  7.744948e+05\n",
       "std         3.749667e+03  1.059822e+04\n",
       "min        -3.080000e+04  7.235110e+05\n",
       "25%         3.500000e+01  7.719270e+05\n",
       "50%         1.000000e+02  7.792250e+05\n",
       "75%         2.500000e+02  7.802340e+05\n",
       "max         2.014491e+06  7.878030e+05"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecdata.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Get a list of the unique candidates (`unique_candidates`):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Bachmann, Michelle', 'Romney, Mitt', 'Obama, Barack',\n",
       "       \"Roemer, Charles E. 'Buddy' III\", 'Pawlenty, Timothy',\n",
       "       'Johnson, Gary Earl', 'Paul, Ron', 'Santorum, Rick',\n",
       "       'Cain, Herman', 'Gingrich, Newt', 'McCotter, Thaddeus G',\n",
       "       'Huntsman, Jon', 'Perry, Rick'], dtype=object)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unique_candidates = fecdata['cand_nm'].unique()\n",
    "unique_candidates"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Assign party affiliations (they are all Republicans except for Barack Obama):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Bachmann, Michelle': 'R',\n",
       " 'Romney, Mitt': 'R',\n",
       " 'Obama, Barack': 'D',\n",
       " \"Roemer, Charles E. 'Buddy' III\": 'R',\n",
       " 'Pawlenty, Timothy': 'R',\n",
       " 'Johnson, Gary Earl': 'R',\n",
       " 'Paul, Ron': 'R',\n",
       " 'Santorum, Rick': 'R',\n",
       " 'Cain, Herman': 'R',\n",
       " 'Gingrich, Newt': 'R',\n",
       " 'McCotter, Thaddeus G': 'R',\n",
       " 'Huntsman, Jon': 'R',\n",
       " 'Perry, Rick': 'R'}"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "party_affiliations = {name: 'D' if name == 'Obama, Barack' else 'R' for name in unique_candidates}\n",
    "party_affiliations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Bachmann, Michelle': 'R',\n",
       " 'Romney, Mitt': 'R',\n",
       " 'Obama, Barack': 'D',\n",
       " \"Roemer, Charles E. 'Buddy' III\": 'R',\n",
       " 'Pawlenty, Timothy': 'R',\n",
       " 'Johnson, Gary Earl': 'R',\n",
       " 'Paul, Ron': 'R',\n",
       " 'Santorum, Rick': 'R',\n",
       " 'Cain, Herman': 'R',\n",
       " 'Gingrich, Newt': 'R',\n",
       " 'McCotter, Thaddeus G': 'R',\n",
       " 'Huntsman, Jon': 'R',\n",
       " 'Perry, Rick': 'R'}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aff = {name: \"D\" if name == \"Obama, Barack\" else \"R\" for name in unique_candidates}\n",
    "aff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "383773     Obama, Barack\n",
       "926454    Gingrich, Newt\n",
       "941087    Gingrich, Newt\n",
       "438185     Obama, Barack\n",
       "957848    Gingrich, Newt\n",
       "Name: cand_nm, dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "candidate_sample = fecdata['cand_nm'].sample(5)\n",
    "candidate_sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "383773    D\n",
       "926454    R\n",
       "941087    R\n",
       "438185    D\n",
       "957848    R\n",
       "Name: cand_nm, dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "candidate_sample.map(party_affiliations)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "fecdata['party'] = fecdata['cand_nm'].map(party_affiliations)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cmte_id</th>\n",
       "      <th>cand_id</th>\n",
       "      <th>cand_nm</th>\n",
       "      <th>contbr_nm</th>\n",
       "      <th>contbr_city</th>\n",
       "      <th>contbr_st</th>\n",
       "      <th>contbr_zip</th>\n",
       "      <th>contbr_employer</th>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th>contb_receipt_amt</th>\n",
       "      <th>contb_receipt_dt</th>\n",
       "      <th>receipt_desc</th>\n",
       "      <th>memo_cd</th>\n",
       "      <th>memo_text</th>\n",
       "      <th>form_tp</th>\n",
       "      <th>file_num</th>\n",
       "      <th>party</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>128259</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>NOVAK, LAURA A</td>\n",
       "      <td>OAKLAND</td>\n",
       "      <td>CA</td>\n",
       "      <td>946111937</td>\n",
       "      <td>SELF-EMPLOYED</td>\n",
       "      <td>WRITER</td>\n",
       "      <td>250.0</td>\n",
       "      <td>22-APR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>785239</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42049</th>\n",
       "      <td>C00431171</td>\n",
       "      <td>P80003353</td>\n",
       "      <td>Romney, Mitt</td>\n",
       "      <td>NEWBERGER, TODD MR.</td>\n",
       "      <td>WILMETTE</td>\n",
       "      <td>IL</td>\n",
       "      <td>600913210</td>\n",
       "      <td>SELF-EMPLOYED</td>\n",
       "      <td>PHILOSOPHER</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>24-APR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>785689</td>\n",
       "      <td>R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>453052</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>JOHNSON, MARY</td>\n",
       "      <td>RED LODGE</td>\n",
       "      <td>MT</td>\n",
       "      <td>590681328</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>75.0</td>\n",
       "      <td>25-FEB-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>787803</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>524548</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>BERGGRUEN, OLIVER</td>\n",
       "      <td>NEW YORK</td>\n",
       "      <td>NY</td>\n",
       "      <td>100656141</td>\n",
       "      <td>SELF-EMPLOYED</td>\n",
       "      <td>ART HISTORIAN</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>15-FEB-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>* OBAMA VICTORY FUND 2012</td>\n",
       "      <td>SA18</td>\n",
       "      <td>787803</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376538</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>RIDORE, MARIE</td>\n",
       "      <td>STONEHAM</td>\n",
       "      <td>MA</td>\n",
       "      <td>21803531</td>\n",
       "      <td>PARTNERS HEALTH CARE SYSTEM</td>\n",
       "      <td>SR. BILLING SPECIALIST</td>\n",
       "      <td>10.0</td>\n",
       "      <td>05-APR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>785239</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          cmte_id    cand_id        cand_nm            contbr_nm contbr_city  \\\n",
       "128259  C00431445  P80003338  Obama, Barack       NOVAK, LAURA A     OAKLAND   \n",
       "42049   C00431171  P80003353   Romney, Mitt  NEWBERGER, TODD MR.    WILMETTE   \n",
       "453052  C00431445  P80003338  Obama, Barack        JOHNSON, MARY   RED LODGE   \n",
       "524548  C00431445  P80003338  Obama, Barack    BERGGRUEN, OLIVER    NEW YORK   \n",
       "376538  C00431445  P80003338  Obama, Barack        RIDORE, MARIE    STONEHAM   \n",
       "\n",
       "       contbr_st contbr_zip              contbr_employer  \\\n",
       "128259        CA  946111937                SELF-EMPLOYED   \n",
       "42049         IL  600913210                SELF-EMPLOYED   \n",
       "453052        MT  590681328                      RETIRED   \n",
       "524548        NY  100656141                SELF-EMPLOYED   \n",
       "376538        MA   21803531  PARTNERS HEALTH CARE SYSTEM   \n",
       "\n",
       "             contbr_occupation  contb_receipt_amt contb_receipt_dt  \\\n",
       "128259                  WRITER              250.0        22-APR-12   \n",
       "42049              PHILOSOPHER             2500.0        24-APR-12   \n",
       "453052                 RETIRED               75.0        25-FEB-12   \n",
       "524548           ART HISTORIAN             2500.0        15-FEB-12   \n",
       "376538  SR. BILLING SPECIALIST               10.0        05-APR-12   \n",
       "\n",
       "       receipt_desc memo_cd                  memo_text form_tp  file_num party  \n",
       "128259          NaN     NaN                        NaN   SA17A    785239     D  \n",
       "42049           NaN     NaN                        NaN   SA17A    785689     R  \n",
       "453052          NaN     NaN                        NaN   SA17A    787803     D  \n",
       "524548          NaN       X  * OBAMA VICTORY FUND 2012    SA18    787803     D  \n",
       "376538          NaN     NaN                        NaN   SA17A    785239     D  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecdata.sample(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Total contributions by party and candidate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What was the total amount of contributions (in millions of dollars)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "298.75139514000006"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecdata['contb_receipt_amt'].sum()*1e-6 # millions of dollars"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Which **party** got more individual donations (transactions, not total dollars)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "D    593746\n",
       "R    407985\n",
       "Name: party, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecdata['party'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Which party got more total dollars?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "party\n",
       "D    133.502591\n",
       "R    165.248804\n",
       "Name: contb_receipt_amt, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecdata.groupby('party')['contb_receipt_amt'].sum()*1e-6"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Filter all the data to include only the two main candidates, Romney and Obama."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "keep_candidates = {'Obama, Barack', 'Romney, Mitt'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(700975, 17)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "matches = fecdata['cand_nm'].apply(lambda x: x in keep_candidates)\n",
    "fecdata[matches].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Romney, Mitt' 'Obama, Barack']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cmte_id</th>\n",
       "      <th>cand_id</th>\n",
       "      <th>cand_nm</th>\n",
       "      <th>contbr_nm</th>\n",
       "      <th>contbr_city</th>\n",
       "      <th>contbr_st</th>\n",
       "      <th>contbr_zip</th>\n",
       "      <th>contbr_employer</th>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th>contb_receipt_amt</th>\n",
       "      <th>contb_receipt_dt</th>\n",
       "      <th>receipt_desc</th>\n",
       "      <th>memo_cd</th>\n",
       "      <th>memo_text</th>\n",
       "      <th>form_tp</th>\n",
       "      <th>file_num</th>\n",
       "      <th>party</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>667371</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>BOYNTON, JUDITH</td>\n",
       "      <td>HYDE PARK</td>\n",
       "      <td>VT</td>\n",
       "      <td>56559045</td>\n",
       "      <td>SELF EMPLOYED</td>\n",
       "      <td>ARTIST</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>27-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>* OBAMA VICTORY FUND 2012</td>\n",
       "      <td>SA18</td>\n",
       "      <td>756214</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>638073</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>SHAPPELL, MICHAEL</td>\n",
       "      <td>LONGVIEW</td>\n",
       "      <td>TX</td>\n",
       "      <td>756042646</td>\n",
       "      <td>YOURTEACHER.COM</td>\n",
       "      <td>DIRECTOR OF TECHNOLOGY</td>\n",
       "      <td>35.0</td>\n",
       "      <td>19-APR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>785239</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440930</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>LONG, SHARON</td>\n",
       "      <td>MINNEAPOLIS</td>\n",
       "      <td>MN</td>\n",
       "      <td>554143678</td>\n",
       "      <td>URBAN INSTITUTE</td>\n",
       "      <td>ECONOMIST</td>\n",
       "      <td>20.0</td>\n",
       "      <td>21-FEB-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>* OBAMA VICTORY FUND 2012</td>\n",
       "      <td>SA18</td>\n",
       "      <td>787803</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273634</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>GREEN, GARY</td>\n",
       "      <td>SUMMERFIELD</td>\n",
       "      <td>FL</td>\n",
       "      <td>344911611</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>RETIRED</td>\n",
       "      <td>20.0</td>\n",
       "      <td>11-DEC-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>* OBAMA VICTORY FUND 2012</td>\n",
       "      <td>SA18</td>\n",
       "      <td>772372</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>673483</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>RUIZ, RAFAEL</td>\n",
       "      <td>SEATTLE</td>\n",
       "      <td>WA</td>\n",
       "      <td>981034533</td>\n",
       "      <td>MICROSOFT</td>\n",
       "      <td>SOFTWARE ENGINEER</td>\n",
       "      <td>50.0</td>\n",
       "      <td>19-APR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SA17A</td>\n",
       "      <td>785239</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          cmte_id    cand_id        cand_nm          contbr_nm  contbr_city  \\\n",
       "667371  C00431445  P80003338  Obama, Barack    BOYNTON, JUDITH    HYDE PARK   \n",
       "638073  C00431445  P80003338  Obama, Barack  SHAPPELL, MICHAEL     LONGVIEW   \n",
       "440930  C00431445  P80003338  Obama, Barack       LONG, SHARON  MINNEAPOLIS   \n",
       "273634  C00431445  P80003338  Obama, Barack        GREEN, GARY  SUMMERFIELD   \n",
       "673483  C00431445  P80003338  Obama, Barack       RUIZ, RAFAEL      SEATTLE   \n",
       "\n",
       "       contbr_st contbr_zip  contbr_employer       contbr_occupation  \\\n",
       "667371        VT   56559045    SELF EMPLOYED                  ARTIST   \n",
       "638073        TX  756042646  YOURTEACHER.COM  DIRECTOR OF TECHNOLOGY   \n",
       "440930        MN  554143678  URBAN INSTITUTE               ECONOMIST   \n",
       "273634        FL  344911611          RETIRED                 RETIRED   \n",
       "673483        WA  981034533        MICROSOFT       SOFTWARE ENGINEER   \n",
       "\n",
       "        contb_receipt_amt contb_receipt_dt receipt_desc memo_cd  \\\n",
       "667371             2500.0        27-JUN-11          NaN       X   \n",
       "638073               35.0        19-APR-12          NaN     NaN   \n",
       "440930               20.0        21-FEB-12          NaN       X   \n",
       "273634               20.0        11-DEC-11          NaN       X   \n",
       "673483               50.0        19-APR-12          NaN     NaN   \n",
       "\n",
       "                        memo_text form_tp  file_num party  \n",
       "667371  * OBAMA VICTORY FUND 2012    SA18    756214     D  \n",
       "638073                        NaN   SA17A    785239     D  \n",
       "440930  * OBAMA VICTORY FUND 2012    SA18    787803     D  \n",
       "273634  * OBAMA VICTORY FUND 2012    SA18    772372     D  \n",
       "673483                        NaN   SA17A    785239     D  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "cand_nm\n",
       "Obama, Barack    133.502591\n",
       "Romney, Mitt      85.219249\n",
       "Name: contb_receipt_amt, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fecmain = fecdata[fecdata['cand_nm'].isin(keep_candidates)].copy()\n",
    "print(fecmain['cand_nm'].unique())\n",
    "display(fecmain.sample(5))\n",
    "display(fecmain.groupby('cand_nm')['contb_receipt_amt'].sum()*1e-6)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Who contributes?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Get a list of top occupations:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "33606"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(fecmain['contbr_occupation'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RETIRED                                   177897\n",
       "ATTORNEY                                   30219\n",
       "INFORMATION REQUESTED                      24785\n",
       "HOMEMAKER                                  19742\n",
       "PHYSICIAN                                  17259\n",
       "INFORMATION REQUESTED PER BEST EFFORTS     12647\n",
       "PROFESSOR                                  11812\n",
       "TEACHER                                    11517\n",
       "CONSULTANT                                 10092\n",
       "NOT EMPLOYED                                9710\n",
       "LAWYER                                      7454\n",
       "ENGINEER                                    6119\n",
       "PRESIDENT                                   4918\n",
       "MANAGER                                     4759\n",
       "WRITER                                      4447\n",
       "SELF-EMPLOYED                               3786\n",
       "SALES                                       3706\n",
       "EXECUTIVE                                   3654\n",
       "OWNER                                       3430\n",
       "EDUCATOR                                    3361\n",
       "STUDENT                                     3276\n",
       "CEO                                         3188\n",
       "ARTIST                                      3109\n",
       "RN                                          2852\n",
       "REGISTERED NURSE                            2447\n",
       "SOCIAL WORKER                               2425\n",
       "ACCOUNTANT                                  2425\n",
       "PSYCHOLOGIST                                2355\n",
       "SOFTWARE ENGINEER                           2234\n",
       "BUSINESS OWNER                              2133\n",
       "                                           ...  \n",
       "CENSUS BUREAU                                  1\n",
       "FBI AGENT                                      1\n",
       "GARY HALL                                      1\n",
       "CORPORATE/EXECUTIVE                            1\n",
       "GRADUATE STUDENT, M DIV PROGRAM                1\n",
       "OWNER/RESTAURATEUR                             1\n",
       "OIL AND GAS GEOLOGIST                          1\n",
       "INTERNET PUBLISHER                             1\n",
       "MUCISIAN                                       1\n",
       "COMMERCIAL REAL ESTATE LENDER                  1\n",
       "PRODUCT LINE MANAGER                           1\n",
       "MARKETING CONSULTANTS                          1\n",
       "ELECTED SCHOOL BOARD MEMBER                    1\n",
       "C.E.O./DEAN                                    1\n",
       "LANDSCAPE ARCHITECT & RENEWABLE ENERGY         1\n",
       "VP, COMMUNITY HEALTH                           1\n",
       "ART CONSERVATION AND RESTORATION               1\n",
       "OWNER OF COMPANY                               1\n",
       "MGR/OWNER                                      1\n",
       "GENERAL DENTISTRY                              1\n",
       "PRESIDENT SOUTHEAST NATIONAL ACCOUNTS          1\n",
       "POLICE MANAGER                                 1\n",
       "PART-TIME FINANCIAL SERVICES CONSULTAN         1\n",
       "ASSESSMENT TECHNICIAN II                       1\n",
       "SR. DIR. OF OPERATIONS                         1\n",
       "PROPERTY MANAGER AND BOAT SURVEYOR             1\n",
       "INTERNATIONAL MANAGEMENT COMPANY               1\n",
       "IN-HOME SERVICE REP.                           1\n",
       "MARTIN WERNER                                  1\n",
       "RETIRED LAW ENFORCEMENT                        1\n",
       "Name: contbr_occupation, Length: 33605, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecmain['contbr_occupation'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Replace synonyms: (also: `dict.get()`)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "occ_mapping = {'INFORMATION REQUESTED': 'NOT PROVIDED',\n",
    "               'INFORMATION REQUESTED PER BEST EFFORTS': 'NOT PROVIDED',\n",
    "               'INFORMATION REQUESTED (BEST EFFORTS)': 'NOT PROVIDED',\n",
    "               'C.E.O.': 'CEO'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "411                NaN\n",
       "412                NaN\n",
       "413                NaN\n",
       "414                NaN\n",
       "415                NaN\n",
       "416                NaN\n",
       "417                NaN\n",
       "418                NaN\n",
       "419                NaN\n",
       "420                NaN\n",
       "421                NaN\n",
       "422                NaN\n",
       "423                NaN\n",
       "424                NaN\n",
       "425                NaN\n",
       "426                NaN\n",
       "427                NaN\n",
       "428       NOT PROVIDED\n",
       "429                NaN\n",
       "430                NaN\n",
       "431                NaN\n",
       "432                NaN\n",
       "433                NaN\n",
       "434                NaN\n",
       "435                NaN\n",
       "436                NaN\n",
       "437                NaN\n",
       "438                NaN\n",
       "439       NOT PROVIDED\n",
       "440                NaN\n",
       "              ...     \n",
       "701356             NaN\n",
       "701357             NaN\n",
       "701358             NaN\n",
       "701359             NaN\n",
       "701360             NaN\n",
       "701361             NaN\n",
       "701362             NaN\n",
       "701363             NaN\n",
       "701364             NaN\n",
       "701365             NaN\n",
       "701366             NaN\n",
       "701367             NaN\n",
       "701368    NOT PROVIDED\n",
       "701369             NaN\n",
       "701370             NaN\n",
       "701371             NaN\n",
       "701372             NaN\n",
       "701373             NaN\n",
       "701374             NaN\n",
       "701375             NaN\n",
       "701376             NaN\n",
       "701377             NaN\n",
       "701378             NaN\n",
       "701379             NaN\n",
       "701380             NaN\n",
       "701381             NaN\n",
       "701382             NaN\n",
       "701383             NaN\n",
       "701384             NaN\n",
       "701385             NaN\n",
       "Name: contbr_occupation, Length: 700975, dtype: object"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecmain['contbr_occupation'].map(occ_mapping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n",
      "PROFESSOR\n"
     ]
    }
   ],
   "source": [
    "# .get()!\n",
    "print(occ_mapping.get('PROFESSOR'))\n",
    "print(occ_mapping.get('PROFESSOR', 'PROFESSOR'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "fecmain['contbr_occupation'] = fecmain['contbr_occupation'].map(lambda x: occ_mapping.get(x, x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "411                     FOREIGN SERVICE OFFICER\n",
       "412                     FOREIGN SERVICE OFFICER\n",
       "413                        INTELLIGENCE ANALYST\n",
       "414                                    ENGINEER\n",
       "415                   COMPUTER SYSTEMS ENGINEER\n",
       "416                     FOREIGN SERVICE OFFICER\n",
       "417                            MILITARY OFFICER\n",
       "418                   COMPUTER SYSTEMS ENGINEER\n",
       "419                            MILITARY OFFICER\n",
       "420                                    ENGINEER\n",
       "421                                      SECRET\n",
       "422                                      SECRET\n",
       "423                               MEDIA ANALYST\n",
       "424                                    MILITARY\n",
       "425                                    ENGINEER\n",
       "426                                    ENGINEER\n",
       "427                                    ATTORNEY\n",
       "428                                NOT PROVIDED\n",
       "429                                    ATTORNEY\n",
       "430                                     RETIRED\n",
       "431                                     RETIRED\n",
       "432                              VICE PRESIDENT\n",
       "433                                     DENTIST\n",
       "434                                  CONSULTANT\n",
       "435                                PHOTOGRAPHER\n",
       "436                                       PILOT\n",
       "437                              VICE PRESIDENT\n",
       "438                                     STUDENT\n",
       "439                                NOT PROVIDED\n",
       "440                                     RETIRED\n",
       "                          ...                  \n",
       "701356                                ASSOCIATE\n",
       "701357           POLITICAL CONSULTANT AND COACH\n",
       "701358                               BUS DRIVER\n",
       "701359                                  RETIRED\n",
       "701360                            SELF-EMPLOYED\n",
       "701361                                GEOLOGIST\n",
       "701362                                  RETIRED\n",
       "701363           POLITICAL CONSULTANT AND COACH\n",
       "701364                      BUSINESS MANAGEMENT\n",
       "701365                                  RETIRED\n",
       "701366                               BUS DRIVER\n",
       "701367                               CONSULTANT\n",
       "701368                             NOT PROVIDED\n",
       "701369                                  RETIRED\n",
       "701370                         PROGRAM DIRECTOR\n",
       "701371                                  TEACHER\n",
       "701372    GS-15 INTERNATIONAL RELATIONS OFFICER\n",
       "701373    GS-15 INTERNATIONAL RELATIONS OFFICER\n",
       "701374                                 EDUCATOR\n",
       "701375    GS-15 INTERNATIONAL RELATIONS OFFICER\n",
       "701376                                 ATTORNEY\n",
       "701377    GS-15 INTERNATIONAL RELATIONS OFFICER\n",
       "701378    GS-15 INTERNATIONAL RELATIONS OFFICER\n",
       "701379                    PUBLIC HEALTH ADVISOR\n",
       "701380                                 ATTORNEY\n",
       "701381    GS-15 INTERNATIONAL RELATIONS OFFICER\n",
       "701382                                  RETIRED\n",
       "701383                                 EDUCATOR\n",
       "701384    GS-15 INTERNATIONAL RELATIONS OFFICER\n",
       "701385                                  TEACHER\n",
       "Name: contbr_occupation, Length: 700975, dtype: object"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecmain['contbr_occupation']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Synonymous employer mappings:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'INFORMATION REQUESTED': 'NOT PROVIDED',\n",
       " 'INFORMATION REQUESTED PER BEST EFFORTS': 'NOT PROVIDED',\n",
       " 'INFORMATION REQUESTED (BEST EFFORTS)': 'NOT PROVIDED',\n",
       " 'C.E.O.': 'CEO',\n",
       " 'SELF': 'SELF-EMPLOYED',\n",
       " 'SELF EMPLOYED': 'SELF-EMPLOYED'}"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "emp_mapping = occ_mapping.copy()\n",
    "emp_mapping['SELF'] = 'SELF-EMPLOYED'\n",
    "emp_mapping['SELF EMPLOYED'] = 'SELF-EMPLOYED'\n",
    "emp_mapping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "fecmain['contbr_employer'] = fecmain['contbr_employer'].map(lambda x: emp_mapping.get(x, x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'pro'"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "emp_mapping.get('prof','pro')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Create a \"pivot table\" that shows occupations as rows and party affiliation as columns, summing the individual contributions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>party</th>\n",
       "      <th>D</th>\n",
       "      <th>R</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>MIXED-MEDIA ARTIST / STORYTELLER</th>\n",
       "      <td>100.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AREA VICE PRESIDENT</th>\n",
       "      <td>250.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>RESEARCH ASSOCIATE</th>\n",
       "      <td>100.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TEACHER</th>\n",
       "      <td>500.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>THERAPIST</th>\n",
       "      <td>3900.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>-</th>\n",
       "      <td>5000.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>.NET PROGRAMMER</th>\n",
       "      <td>481.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07/13/1972</th>\n",
       "      <td>98.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12K ADVOCATE</th>\n",
       "      <td>150.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13D</th>\n",
       "      <td>721.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1SG RETIRED</th>\n",
       "      <td>210.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1ST ASSISTANT DIRECTOR 2ND UNIT</th>\n",
       "      <td>35.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1ST GRADE TEACHER</th>\n",
       "      <td>435.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1ST VP WEALTH MANAGEMENT</th>\n",
       "      <td>559.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22ND CENTURY REALTY</th>\n",
       "      <td>500.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>270 REGIONAL DIRECTOR</th>\n",
       "      <td>223.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2LT, MEDICAL SERVICE CORPS</th>\n",
       "      <td>244.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2ND GRADE TEACHER</th>\n",
       "      <td>1303.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2ND GRADE TEACHER (ECE PREK-8 SELF-CON</th>\n",
       "      <td>25.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2ND VICE PRESIDENT / SERVICE MANAGER</th>\n",
       "      <td>333.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3 BBQ RESTAURANTS</th>\n",
       "      <td>120.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3D ANIMATOR</th>\n",
       "      <td>1390.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3D ARTIST</th>\n",
       "      <td>685.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3D GURU</th>\n",
       "      <td>124.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3M CROSS CHAIR AND PROFESSOR OF NEUROS</th>\n",
       "      <td>275.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3RD GENERATION FAMILY BUSINESS OWNER</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3RD GRADE TEACHER</th>\n",
       "      <td>50.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3RD MANAGER</th>\n",
       "      <td>323.95</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401(K) RELATIONSHIP MANAGER</th>\n",
       "      <td>500.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401K SPECIALIST</th>\n",
       "      <td>260.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOGA TEACHER</th>\n",
       "      <td>22897.00</td>\n",
       "      <td>2500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOGA TEACHER AND AUTHOR</th>\n",
       "      <td>108.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOGA TEACHER AND TELLER OF TALES</th>\n",
       "      <td>50.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOGA THERAPIST</th>\n",
       "      <td>675.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOGA THERAPIST &amp; PROPERTY MANAGEMENT</th>\n",
       "      <td>700.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOGA THERAPIST/INSTRUCTOR</th>\n",
       "      <td>200.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOGA, MASSAGE THERAPIST</th>\n",
       "      <td>25.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUNG ADULT LIBRARIAN</th>\n",
       "      <td>80.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH ADVOCATE</th>\n",
       "      <td>150.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH CARE WORKER</th>\n",
       "      <td>NaN</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH CAREER SPECIALIST</th>\n",
       "      <td>156.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH CORRECTIONS SUPERVISOR</th>\n",
       "      <td>50.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH DEVELOPMENT</th>\n",
       "      <td>650.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH DIRECTOR</th>\n",
       "      <td>550.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH MINISTER</th>\n",
       "      <td>725.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH OUTREACH DIRECTOR</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH PROGRAMS DIRECTOR</th>\n",
       "      <td>205.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH SERVICE COORDINATOR</th>\n",
       "      <td>425.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH SERVICES LIBRARIAN</th>\n",
       "      <td>290.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH SERVICES MANAGER</th>\n",
       "      <td>300.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH SPECIALIST</th>\n",
       "      <td>652.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH SPORTS DIRECTOR</th>\n",
       "      <td>110.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOUTH VOTE DIRECTOR</th>\n",
       "      <td>165.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZEN BUDDHIST PRIEST</th>\n",
       "      <td>400.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZEN TEACHER</th>\n",
       "      <td>100.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZEPPOS AND ASSOCIATES</th>\n",
       "      <td>1000.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZONE MANAGER</th>\n",
       "      <td>135.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZOOKEEPER</th>\n",
       "      <td>35.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZOOLOGIST</th>\n",
       "      <td>400.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZOOLOGY EDUCATION</th>\n",
       "      <td>25.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>33603 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "party                                          D       R\n",
       "contbr_occupation                                       \n",
       "   MIXED-MEDIA ARTIST / STORYTELLER       100.00     NaN\n",
       " AREA VICE PRESIDENT                      250.00     NaN\n",
       " RESEARCH ASSOCIATE                       100.00     NaN\n",
       " TEACHER                                  500.00     NaN\n",
       " THERAPIST                               3900.00     NaN\n",
       "-                                        5000.00     NaN\n",
       ".NET PROGRAMMER                           481.00     NaN\n",
       "07/13/1972                                 98.00     NaN\n",
       "12K ADVOCATE                              150.00     NaN\n",
       "13D                                       721.00     NaN\n",
       "1SG RETIRED                               210.00     NaN\n",
       "1ST ASSISTANT DIRECTOR 2ND UNIT            35.00     NaN\n",
       "1ST GRADE TEACHER                         435.00     NaN\n",
       "1ST VP WEALTH MANAGEMENT                  559.00     NaN\n",
       "22ND CENTURY REALTY                       500.00     NaN\n",
       "270 REGIONAL DIRECTOR                     223.00     NaN\n",
       "2LT, MEDICAL SERVICE CORPS                244.00     NaN\n",
       "2ND GRADE TEACHER                        1303.00     NaN\n",
       "2ND GRADE TEACHER (ECE PREK-8 SELF-CON     25.00     NaN\n",
       "2ND VICE PRESIDENT / SERVICE MANAGER      333.00     NaN\n",
       "3 BBQ RESTAURANTS                         120.00     NaN\n",
       "3D ANIMATOR                              1390.00     NaN\n",
       "3D ARTIST                                 685.00     NaN\n",
       "3D GURU                                   124.00     NaN\n",
       "3M CROSS CHAIR AND PROFESSOR OF NEUROS    275.00     NaN\n",
       "3RD GENERATION FAMILY BUSINESS OWNER         NaN     3.0\n",
       "3RD GRADE TEACHER                          50.00     NaN\n",
       "3RD MANAGER                               323.95     NaN\n",
       "401(K) RELATIONSHIP MANAGER               500.00     NaN\n",
       "401K SPECIALIST                           260.00     NaN\n",
       "...                                          ...     ...\n",
       "YOGA TEACHER                            22897.00  2500.0\n",
       "YOGA TEACHER AND AUTHOR                   108.00     NaN\n",
       "YOGA TEACHER AND TELLER OF TALES           50.00     NaN\n",
       "YOGA THERAPIST                            675.00     NaN\n",
       "YOGA THERAPIST & PROPERTY MANAGEMENT      700.00     NaN\n",
       "YOGA THERAPIST/INSTRUCTOR                 200.00     NaN\n",
       "YOGA, MASSAGE THERAPIST                    25.00     NaN\n",
       "YOUNG ADULT LIBRARIAN                      80.00     NaN\n",
       "YOUTH ADVOCATE                            150.00     NaN\n",
       "YOUTH CARE WORKER                            NaN    25.0\n",
       "YOUTH CAREER SPECIALIST                   156.00     NaN\n",
       "YOUTH CORRECTIONS SUPERVISOR               50.00     NaN\n",
       "YOUTH DEVELOPMENT                         650.00     NaN\n",
       "YOUTH DIRECTOR                            550.00     NaN\n",
       "YOUTH MINISTER                            725.00     NaN\n",
       "YOUTH OUTREACH DIRECTOR                      NaN  1000.0\n",
       "YOUTH PROGRAMS DIRECTOR                   205.00     NaN\n",
       "YOUTH SERVICE COORDINATOR                 425.00     NaN\n",
       "YOUTH SERVICES LIBRARIAN                  290.00     NaN\n",
       "YOUTH SERVICES MANAGER                    300.00     NaN\n",
       "YOUTH SPECIALIST                          652.00     NaN\n",
       "YOUTH SPORTS DIRECTOR                     110.00     NaN\n",
       "YOUTH VOTE DIRECTOR                       165.00     NaN\n",
       "ZEN BUDDHIST PRIEST                       400.00     NaN\n",
       "ZEN TEACHER                               100.00     NaN\n",
       "ZEPPOS AND ASSOCIATES                    1000.00     NaN\n",
       "ZONE MANAGER                              135.00     NaN\n",
       "ZOOKEEPER                                  35.00     NaN\n",
       "ZOOLOGIST                                 400.00     NaN\n",
       "ZOOLOGY EDUCATION                          25.00     NaN\n",
       "\n",
       "[33603 rows x 2 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "by_occ = fecmain.pivot_table('contb_receipt_amt', index='contbr_occupation', columns='party', aggfunc='sum')\n",
    "by_occ"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Determine which occupations account for $1 million or more in contributions. Compare the amounts between the two party affiliations. (Bonus: Make a plot to compare these visually.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "over_1mil = by_occ[by_occ.sum(axis=1) > 1e6]*1e-6\n",
    "len(over_1mil)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>party</th>\n",
       "      <th>D</th>\n",
       "      <th>R</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ATTORNEY</th>\n",
       "      <td>11.126933</td>\n",
       "      <td>5.302579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BANKER</th>\n",
       "      <td>0.224084</td>\n",
       "      <td>0.993536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BUSINESS OWNER</th>\n",
       "      <td>0.449979</td>\n",
       "      <td>0.601530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CEO</th>\n",
       "      <td>2.071475</td>\n",
       "      <td>2.247242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CHAIRMAN</th>\n",
       "      <td>0.495547</td>\n",
       "      <td>0.752587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CONSULTANT</th>\n",
       "      <td>2.459813</td>\n",
       "      <td>1.404577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ENGINEER</th>\n",
       "      <td>0.950426</td>\n",
       "      <td>0.317249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EXECUTIVE</th>\n",
       "      <td>1.355161</td>\n",
       "      <td>2.230654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FINANCE</th>\n",
       "      <td>0.294031</td>\n",
       "      <td>1.118567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HOMEMAKER</th>\n",
       "      <td>4.243394</td>\n",
       "      <td>8.037251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>INVESTOR</th>\n",
       "      <td>0.884133</td>\n",
       "      <td>1.494725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LAWYER</th>\n",
       "      <td>3.159392</td>\n",
       "      <td>0.007705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MANAGER</th>\n",
       "      <td>0.762693</td>\n",
       "      <td>0.565826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NOT EMPLOYED</th>\n",
       "      <td>1.708108</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NOT PROVIDED</th>\n",
       "      <td>4.849802</td>\n",
       "      <td>11.173375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OWNER</th>\n",
       "      <td>0.998867</td>\n",
       "      <td>0.845396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PHYSICIAN</th>\n",
       "      <td>3.732387</td>\n",
       "      <td>1.332996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PRESIDENT</th>\n",
       "      <td>1.878010</td>\n",
       "      <td>2.403440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PROFESSOR</th>\n",
       "      <td>2.163571</td>\n",
       "      <td>0.160362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REAL ESTATE</th>\n",
       "      <td>0.528752</td>\n",
       "      <td>1.033896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>RETIRED</th>\n",
       "      <td>25.270507</td>\n",
       "      <td>11.266949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SELF-EMPLOYED</th>\n",
       "      <td>0.667393</td>\n",
       "      <td>1.063738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>STUDENT</th>\n",
       "      <td>0.627450</td>\n",
       "      <td>0.488743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TEACHER</th>\n",
       "      <td>1.250969</td>\n",
       "      <td>0.138838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WRITER</th>\n",
       "      <td>1.084089</td>\n",
       "      <td>0.090363</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "party                      D          R\n",
       "contbr_occupation                      \n",
       "ATTORNEY           11.126933   5.302579\n",
       "BANKER              0.224084   0.993536\n",
       "BUSINESS OWNER      0.449979   0.601530\n",
       "CEO                 2.071475   2.247242\n",
       "CHAIRMAN            0.495547   0.752587\n",
       "CONSULTANT          2.459813   1.404577\n",
       "ENGINEER            0.950426   0.317249\n",
       "EXECUTIVE           1.355161   2.230654\n",
       "FINANCE             0.294031   1.118567\n",
       "HOMEMAKER           4.243394   8.037251\n",
       "INVESTOR            0.884133   1.494725\n",
       "LAWYER              3.159392   0.007705\n",
       "MANAGER             0.762693   0.565826\n",
       "NOT EMPLOYED        1.708108        NaN\n",
       "NOT PROVIDED        4.849802  11.173375\n",
       "OWNER               0.998867   0.845396\n",
       "PHYSICIAN           3.732387   1.332996\n",
       "PRESIDENT           1.878010   2.403440\n",
       "PROFESSOR           2.163571   0.160362\n",
       "REAL ESTATE         0.528752   1.033896\n",
       "RETIRED            25.270507  11.266949\n",
       "SELF-EMPLOYED       0.667393   1.063738\n",
       "STUDENT             0.627450   0.488743\n",
       "TEACHER             1.250969   0.138838\n",
       "WRITER              1.084089   0.090363"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "over_1mil"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "sorted_occ = over_1mil.sum(axis=1).sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "contbr_occupation\n",
       "BUSINESS OWNER     1.051509\n",
       "STUDENT            1.116193\n",
       "WRITER             1.174452\n",
       "BANKER             1.217621\n",
       "CHAIRMAN           1.248134\n",
       "ENGINEER           1.267675\n",
       "MANAGER            1.328519\n",
       "TEACHER            1.389808\n",
       "FINANCE            1.412599\n",
       "REAL ESTATE        1.562648\n",
       "NOT EMPLOYED       1.708108\n",
       "SELF-EMPLOYED      1.731132\n",
       "OWNER              1.844263\n",
       "PROFESSOR          2.323933\n",
       "INVESTOR           2.378858\n",
       "LAWYER             3.167097\n",
       "EXECUTIVE          3.585815\n",
       "CONSULTANT         3.864390\n",
       "PRESIDENT          4.281450\n",
       "CEO                4.318717\n",
       "PHYSICIAN          5.065384\n",
       "HOMEMAKER         12.280645\n",
       "NOT PROVIDED      16.023177\n",
       "ATTORNEY          16.429512\n",
       "RETIRED           36.537456\n",
       "dtype: float64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "over_1mil.sum(axis=1).sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "over_1mil_sorted = over_1mil.loc[sorted_occ.index]\n",
    "over_1mil_sorted.plot(kind='barh', stacked=True, figsize=(10, 6));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Simple ranking"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Determine largest donors:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "325136    2014490.51\n",
       "326651    1944042.43\n",
       "344539    1679114.65\n",
       "344419    1511192.17\n",
       "319478     526246.17\n",
       "335187     512710.91\n",
       "257270     451726.00\n",
       "Name: contb_receipt_amt, dtype: float64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "largest_donors = fecmain['contb_receipt_amt'].nlargest(7)\n",
    "largest_donors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cmte_id</th>\n",
       "      <th>cand_id</th>\n",
       "      <th>cand_nm</th>\n",
       "      <th>contbr_nm</th>\n",
       "      <th>contbr_city</th>\n",
       "      <th>contbr_st</th>\n",
       "      <th>contbr_zip</th>\n",
       "      <th>contbr_employer</th>\n",
       "      <th>contbr_occupation</th>\n",
       "      <th>contb_receipt_amt</th>\n",
       "      <th>contb_receipt_dt</th>\n",
       "      <th>receipt_desc</th>\n",
       "      <th>memo_cd</th>\n",
       "      <th>memo_text</th>\n",
       "      <th>form_tp</th>\n",
       "      <th>file_num</th>\n",
       "      <th>party</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>325136</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n",
       "      <td>CHICAGO</td>\n",
       "      <td>IL</td>\n",
       "      <td>60680</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014490.51</td>\n",
       "      <td>29-FEB-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>*</td>\n",
       "      <td>SA18</td>\n",
       "      <td>787803</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>326651</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n",
       "      <td>CHICAGO</td>\n",
       "      <td>IL</td>\n",
       "      <td>60680</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1944042.43</td>\n",
       "      <td>31-DEC-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>*</td>\n",
       "      <td>SA18</td>\n",
       "      <td>772372</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344539</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n",
       "      <td>CHICAGO</td>\n",
       "      <td>IL</td>\n",
       "      <td>60680</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1679114.65</td>\n",
       "      <td>31-MAR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>*</td>\n",
       "      <td>SA18</td>\n",
       "      <td>780234</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344419</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n",
       "      <td>CHICAGO</td>\n",
       "      <td>IL</td>\n",
       "      <td>60680</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1511192.17</td>\n",
       "      <td>30-SEP-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>*</td>\n",
       "      <td>SA18</td>\n",
       "      <td>756218</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>319478</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n",
       "      <td>CHICAGO</td>\n",
       "      <td>IL</td>\n",
       "      <td>60680</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>526246.17</td>\n",
       "      <td>30-APR-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>*</td>\n",
       "      <td>SA18</td>\n",
       "      <td>785239</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>335187</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n",
       "      <td>CHICAGO</td>\n",
       "      <td>IL</td>\n",
       "      <td>60680</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>512710.91</td>\n",
       "      <td>31-JAN-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>*</td>\n",
       "      <td>SA18</td>\n",
       "      <td>775668</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257270</th>\n",
       "      <td>C00431445</td>\n",
       "      <td>P80003338</td>\n",
       "      <td>Obama, Barack</td>\n",
       "      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n",
       "      <td>WASHINGTON</td>\n",
       "      <td>DC</td>\n",
       "      <td>20003</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>451726.00</td>\n",
       "      <td>30-JUN-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>X</td>\n",
       "      <td>*</td>\n",
       "      <td>SA18</td>\n",
       "      <td>756214</td>\n",
       "      <td>D</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          cmte_id    cand_id        cand_nm  \\\n",
       "325136  C00431445  P80003338  Obama, Barack   \n",
       "326651  C00431445  P80003338  Obama, Barack   \n",
       "344539  C00431445  P80003338  Obama, Barack   \n",
       "344419  C00431445  P80003338  Obama, Barack   \n",
       "319478  C00431445  P80003338  Obama, Barack   \n",
       "335187  C00431445  P80003338  Obama, Barack   \n",
       "257270  C00431445  P80003338  Obama, Barack   \n",
       "\n",
       "                                   contbr_nm contbr_city contbr_st contbr_zip  \\\n",
       "325136  OBAMA VICTORY FUND 2012 - UNITEMIZED     CHICAGO        IL      60680   \n",
       "326651  OBAMA VICTORY FUND 2012 - UNITEMIZED     CHICAGO        IL      60680   \n",
       "344539  OBAMA VICTORY FUND 2012 - UNITEMIZED     CHICAGO        IL      60680   \n",
       "344419  OBAMA VICTORY FUND 2012 - UNITEMIZED     CHICAGO        IL      60680   \n",
       "319478  OBAMA VICTORY FUND 2012 - UNITEMIZED     CHICAGO        IL      60680   \n",
       "335187  OBAMA VICTORY FUND 2012 - UNITEMIZED     CHICAGO        IL      60680   \n",
       "257270  OBAMA VICTORY FUND 2012 - UNITEMIZED  WASHINGTON        DC      20003   \n",
       "\n",
       "       contbr_employer contbr_occupation  contb_receipt_amt contb_receipt_dt  \\\n",
       "325136             NaN               NaN         2014490.51        29-FEB-12   \n",
       "326651             NaN               NaN         1944042.43        31-DEC-11   \n",
       "344539             NaN               NaN         1679114.65        31-MAR-12   \n",
       "344419             NaN               NaN         1511192.17        30-SEP-11   \n",
       "319478             NaN               NaN          526246.17        30-APR-12   \n",
       "335187             NaN               NaN          512710.91        31-JAN-12   \n",
       "257270             NaN               NaN          451726.00        30-JUN-11   \n",
       "\n",
       "       receipt_desc memo_cd memo_text form_tp  file_num party  \n",
       "325136          NaN       X         *    SA18    787803     D  \n",
       "326651          NaN       X         *    SA18    772372     D  \n",
       "344539          NaN       X         *    SA18    780234     D  \n",
       "344419          NaN       X         *    SA18    756218     D  \n",
       "319478          NaN       X         *    SA18    785239     D  \n",
       "335187          NaN       X         *    SA18    775668     D  \n",
       "257270          NaN       X         *    SA18    756214     D  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fecmain.loc[largest_donors.index]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Display largest donors, grouped by candidate:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cand_nm              \n",
       "Obama, Barack  325136    2014490.51\n",
       "               326651    1944042.43\n",
       "               344539    1679114.65\n",
       "Romney, Mitt   65131       12700.00\n",
       "               41888       10000.00\n",
       "               90076       10000.00\n",
       "Name: contb_receipt_amt, dtype: float64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped = fecmain.groupby('cand_nm')\n",
    "grouped['contb_receipt_amt'].nlargest(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.groupby.groupby.DataFrameGroupBy"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(grouped)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`.apply()` for groups:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cand_nm\n",
       "Obama, Barack    <class 'pandas.core.frame.DataFrame'>\n",
       "Romney, Mitt     <class 'pandas.core.frame.DataFrame'>\n",
       "dtype: object"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped.apply(lambda x: type(x))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Use `.apply()` to get `DataFrame` objects showing the largest donors, grouped by candidate _and_ occupation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "contbr_occupation\n",
       "RETIRED         36537456.46\n",
       "ATTORNEY        16429511.79\n",
       "NOT PROVIDED    16023176.80\n",
       "HOMEMAKER       12280645.16\n",
       "PHYSICIAN        5065383.78\n",
       "Name: contb_receipt_amt, dtype: float64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def top_amounts_by_occupation(df, n=5):\n",
    "    # Fill me in!\n",
    "    totals = df.groupby('contbr_occupation')['contb_receipt_amt'].sum()\n",
    "    return totals.nlargest(n)\n",
    "\n",
    "top_amounts_by_occupation(fecmain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cand_nm        contbr_occupation\n",
       "Obama, Barack  RETIRED              25270507.23\n",
       "               ATTORNEY             11126932.97\n",
       "               NOT PROVIDED          4849801.96\n",
       "               HOMEMAKER             4243394.30\n",
       "               PHYSICIAN             3732387.44\n",
       "               LAWYER                3159391.87\n",
       "               CONSULTANT            2459812.71\n",
       "               PROFESSOR             2163571.08\n",
       "               CEO                   2071474.79\n",
       "               PRESIDENT             1878009.95\n",
       "Romney, Mitt   RETIRED              11266949.23\n",
       "               NOT PROVIDED         11173374.84\n",
       "               HOMEMAKER             8037250.86\n",
       "               ATTORNEY              5302578.82\n",
       "               PRESIDENT             2403439.77\n",
       "               CEO                   2247242.03\n",
       "               EXECUTIVE             2230653.79\n",
       "               INVESTOR              1494725.12\n",
       "               CONSULTANT            1404576.94\n",
       "               PHYSICIAN             1332996.34\n",
       "Name: contb_receipt_amt, dtype: float64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped.apply(top_amounts_by_occupation, n=10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Big vs. small donations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For each of the leading two candidates, did most of their money come from large or small donations?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bins = [0] + [10**k for k in range(0, 8)]\n",
    "bins"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "411      [10, 100)\n",
       "412    [100, 1000)\n",
       "413    [100, 1000)\n",
       "414      [10, 100)\n",
       "415    [100, 1000)\n",
       "Name: contb_receipt_amt, dtype: category\n",
       "Categories (8, interval[int64]): [[0, 1) < [1, 10) < [10, 100) < [100, 1000) < [1000, 10000) < [10000, 100000) < [100000, 1000000) < [1000000, 10000000)]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels = pd.cut(fecmain['contb_receipt_amt'], bins, right=False)\n",
    "labels[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cand_nm        contb_receipt_amt  \n",
       "Obama, Barack  [0, 1)                    824\n",
       "               [1, 10)                 12028\n",
       "               [10, 100)              300624\n",
       "               [100, 1000)            239811\n",
       "               [1000, 10000)           36440\n",
       "               [10000, 100000)             2\n",
       "               [100000, 1000000)           3\n",
       "               [1000000, 10000000)         4\n",
       "Romney, Mitt   [1, 10)                  1407\n",
       "               [10, 100)               22575\n",
       "               [100, 1000)             42991\n",
       "               [1000, 10000)           38177\n",
       "               [10000, 100000)             5\n",
       "dtype: int64"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped = fecmain.groupby(['cand_nm', labels])\n",
    "grouped.size()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Fin!**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3 [3.6]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  },
  "nteract": {
   "version": "0.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
